package com.virtualprodigyllc.sampler.utils;

public class AnimatedListAdapter  extends BaseAdapter {

	private List<Memoir> _memoirList;
	Context _context;
	public static final String CALENDAR_LIST_TAG ="memoir_Tag_Obj";

	/**
	 * @param memoirList
	 * @param context
	 * THis class populates the list view at the bottom of the calendar view, with all of that days's stories
	 */
	HomePageRandomMemoirListAdapter (List<Memoir> memoirList, Context context){
		_memoirList = memoirList;
		_context = context;
	}

	public int getCount() {
		// TODO Auto-generated method stub
		return _memoirList.size();
	}

	public Object getItem(int position) {
		// TODO Auto-generated method stub
		return _memoirList.get(position);
	}

	public long getItemId(int position) {
		// TODO Auto-generated method stub
		return position;
	}

	public void removeMemoiWithRowId(int rowID){
		int location = -1;
		int i = 0;
		for (Memoir temp : _memoirList) {
			if(temp.getId() ==rowID){
				location = i;
				break;
			}else{
				i += 1;
			}
		}
		if(location != -1){
			_memoirList.remove(location);
		}
	}

	private String setFormatedTime( int hr, int min) {
		String formatedTime = "";

		Calendar cal = Calendar.getInstance();
		cal.set(Calendar.HOUR_OF_DAY, hr);
		cal.set(Calendar.MINUTE, min);
		String am_pm = ( cal.get(Calendar.AM_PM) == Calendar.AM ? "AM":"PM");
		formatedTime = (cal.get(Calendar.HOUR) == 0) ?"12":cal.get(Calendar.HOUR)+""; 
		formatedTime = formatedTime + ":" + String.format("%02d", cal.get(Calendar.MINUTE)) + am_pm;
		return formatedTime;
	}

	public View getView(int position, View view, ViewGroup parent) {
		// TODO Auto-generated method stub
		View v = view;
		if (v == null)
		{
			LayoutInflater vi = (LayoutInflater)_context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
			v = vi.inflate(R.layout.memoir_random_list_item, null);
		}

		TextView title = (TextView)v.findViewById(R.id.titleTextView);
		TextView story = (TextView)v.findViewById(R.id.storyRecapTextView);
		TextView time = (TextView)v.findViewById(R.id.memoirTimeTV);
		TextView date = (TextView)v.findViewById(R.id.memoirDateTV);
		TextView location = (TextView)v.findViewById(R.id.memoirLocationTV);
		Memoir tempMemoir = _memoirList.get(position);


		if(tempMemoir.getTitle() ==null || tempMemoir.getTitle().equals("")){
			title.setText(_context.getString(R.string.empty_list_field));
		}else{
			title.setText(tempMemoir.getTitle());
		}
		
		if(tempMemoir.getStory() ==null || tempMemoir.getStory().equals("")){
			story.setText(_context.getString(R.string.empty_list_field));
		}else{
			story.setText(tempMemoir.getStory());
			story.setSelected(true);
		}
		
		if(tempMemoir.getDate() ==null|| tempMemoir.getDate().equals("")){
			date.setText(_context.getString(R.string.empty_list_field));
		}else{
			date.setText(tempMemoir.getDate());	
		}
		
		if(tempMemoir.getLocation() ==null || tempMemoir.getLocation().equals("")){
			location.setText(_context.getString(R.string.empty_list_field)); 
		}else{
			location.setText(tempMemoir.getLocation());
		}
		
		Calendar cal = Calendar.getInstance();
		cal.setTimeZone(TimeZone.getDefault());
		
		time.setText(setFormatedTime(cal.get(Calendar.HOUR_OF_DAY) ,cal.get(Calendar.MINUTE) ));
		
		v.setTag(tempMemoir);
		return v;
	}	
}
