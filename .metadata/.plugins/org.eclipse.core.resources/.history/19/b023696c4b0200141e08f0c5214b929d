package com.virtualprodigyllc.sampler;

import android.content.Context;
import android.graphics.Bitmap;
import android.graphics.Camera;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.LightingColorFilter;
import android.graphics.Matrix;
import android.graphics.Paint;
import android.util.AttributeSet;
import android.util.Log;
import android.view.View;
import android.widget.ListView;

public class AnimatedListView extends ListView{

	private Camera mCamera = new Camera();
	private Matrix mMatrix = new Matrix();

	public AnimatedListView(Context context) {
		super(context);
	}

	public AnimatedListView(Context context, AttributeSet attrs) {
		super(context, attrs);
	}

	public AnimatedListView(Context context, AttributeSet attrs, int defStyle) {
		super(context, attrs, defStyle);
	}

	@Override
	protected boolean drawChild(Canvas canvas, View child, long drawingTime) {
		//			if(child.getId() == R.layout.empty_top_memoirs_view){
		//				Log.d("Tweeking the 3d list view", "dont fancness for an empty list");
		//				return super.drawChild(canvas, child, drawingTime);
		//				 
		//			}
		// get top left coordinates
		//			setDrawingCacheEnabled(true);
		//			buildDrawingCache();
		Bitmap bitmap = child.getDrawingCache();
		if(bitmap == null){//I keep getting nulls for some reason
			//				setDrawingCacheEnabled(true);// the nulls are problly because i need a drawing cache on the children not the parent.
			//				buildDrawingCache();
			child.setDrawingCacheEnabled(true); // and now i have doubles drawing wtf and the wheel affect is sideways wtf did i do...
			child.buildDrawingCache();
			bitmap = child.getDrawingCache();
		}
		int left = child.getLeft();
		int top = child.getTop();

		// get offset to center
		int centerX = child.getWidth() / 2;
		int centerY = child.getHeight() / 2;

		// get absolute center of child
		float pivotX = left + centerX;
		float pivotY = top + centerY;

		// calculate distance from center
		float centerScreen = getHeight() / 2;
		float distFromCenter = (pivotY - centerScreen) / centerScreen;

		// calculate scale and rotation
		float scale = (float)(1 - 2 * (1 - Math.cos(distFromCenter)));
		if(scale < 0.5f)
			scale = 0.5f; //i dont want them too small
		if(child == getChildAt(0));
		Log.d("Tweeking the 3d list view", "scale is" + scale);//use this to set a minimum scale down
		float rotation =distFromCenter;

		canvas.save();
		//	        canvas.rotate(rotation, pivotX, pivotY);// i want caleing via the camera not a rotation
		canvas.scale(scale, scale, pivotX, pivotY);
		//	        Bitmap bitmap = child.getDrawingCache();
		Paint paint = new Paint();
		paint.setAntiAlias(true);
		paint.setFilterBitmap(true);


		if (mCamera == null) {
			mCamera = new Camera();
		}
		mCamera.save();
		mCamera.rotateY(rotation);

		if (mMatrix == null) {
			mMatrix = new Matrix();
		}
		mCamera.getMatrix(mMatrix);
		mCamera.restore();

		paint.setColorFilter(phongIllumination((float)rotation * 15));
		mMatrix.preTranslate(-centerX, -centerY);
		mMatrix.postScale(scale, scale);
		//	        mMatrix.postScale(centerX, centerY);
		mMatrix.postTranslate(pivotX, pivotY);
		//	        mMatrix.postTranslate(left, top);

		//	        Bitmap bitmap = child.getDrawingCache();
		//	        canvas.drawBitmap(bitmap, mMatrix, paint);
		canvas.drawBitmap(bitmap, left, top, paint);
		//	        super.drawChild(canvas, child, drawingTime);

		canvas.restore();
		return false;
	}
}


