package com.virtualprodigyllc.sampler.utils;

import java.util.Calendar;
import java.util.List;
import java.util.TimeZone;

import android.content.Context;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.TextView;

import com.virtualprodigyllc.sampler.R;

public class AnimatedListAdapter  extends BaseAdapter {

	private List<String> _demoList;
	Context _context;
	private final String Error_TAG = AnimatedListAdapter.this.getClass().getName();

	/**
	 * @param demoList
	 * @param context
	 * THis class populates the list view at the bottom of the calendar view, with all of that days's stories
	 */
	AnimatedListAdapter (List<String> demoList, Context context){
		_demoList = demoList;
		_context = context;
	}

	public int getCount() {
		// TODO Auto-generated method stub
		return _demoList.size();
	}

	/* (non-Javadoc)
	 * @see android.widget.Adapter#getItem(int)
	 * MB no object to return 
	 */
	public Object getItem(int position) {
		// TODO Auto-generated method stub
		return null;
	}

	public long getItemId(int position) {
		// TODO Auto-generated method stub
		return position;
	}

	public View getView(int position, View view, ViewGroup parent) {
		// TODO Auto-generated method stub
		View v = view;
		if (v == null)
		{
			LayoutInflater vi = (LayoutInflater)_context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
			v = vi.inflate(R.layout.anim_listview_item, null);
		}

		TextView title = (TextView)v.findViewById(R.id.title);
		TextView description = (TextView)v.findViewById(R.id.demoDescrip);
		DemosObject tempDemo = _demoList.get(position);


		if(demosObj.getTitle() ==null || demosObj.getTitle().equals("")){
			title.setText(_context.getString(R.string.empty_list_field));
		}else{
			title.setText(demosObj.getTitle());
		}
		
		if(demosObj.getStory() ==null || demosObj.getStory().equals("")){
			story.setText(_context.getString(R.string.empty_list_field));
		}else{
			story.setText(demosObj.getStory());
			story.setSelected(true);
		}
		
		if(demosObj.getDate() ==null|| demosObj.getDate().equals("")){
			date.setText(_context.getString(R.string.empty_list_field));
		}else{
			date.setText(demosObj.getDate());	
		}
		
		if(demosObj.getLocation() ==null || demosObj.getLocation().equals("")){
			location.setText(_context.getString(R.string.empty_list_field)); 
		}else{
			location.setText(demosObj.getLocation());
		}
		
		Calendar cal = Calendar.getInstance();
		cal.setTimeZone(TimeZone.getDefault());
		
		time.setText(setFormatedTime(cal.get(Calendar.HOUR_OF_DAY) ,cal.get(Calendar.MINUTE) ));
		
		v.setTag(demosObj);
		return v;
	}	
}
